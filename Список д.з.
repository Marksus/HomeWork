+1) Как скомпилировать сразу все файлы в папке с помощью javac
+2) Написать программу для сортировки целочисленного массива.
+3) Посчитать сумму элементов в матрице
+4) Написать программу сортировки lsd
+5) Придумать и написать пример с матрицей, в котором будет использован continious с меткой.
+6) Написать код который создаст матрицу вида:
	метод: createMatrix(10, 20)
	матрица:
	10000000001000000000
	01000000010100000001
	00100000100010000010
	00010001000001000100
	00001010000000101000
	00000100000000010000
	00001010000000101000
	00010001000001000100
	00100000100010000010
	01000000010100000001
+7)Придумать собственные примеры 8 видов наследования
+8)Написать иерархию по теме 2 из д/з.
+9) Изменить MyList, чтобы можно добавлять Node  с конца
+10) Сделать обобщенный тип по работе со стеком(push, pop)
+11) Создать класс с тремя признаками, и написать примеры сортировки по каждому из них.(Пример — классы Call, UseCall от 28.09.2015)
+12)Преобразовать класс Dog (от 28.09.2015), чтобы Moods стали внешними классами.
+13)Сделать итератор не анонимным, а локальным классом, внутренним классом и статическим классом.(lesson151001 MyList)
+14) Написать класс для стека, на основе массива, у которого будет итератор, позволяющий просматривать стек(неограниченный по размеру) от верха до дна(должны присутствовать методы push, pop, iterator, top, size, isEmpty)(Если стек пустой, то методы pop top должны возвращать null) Так же сделать класс демонстрирующий все методы стека.
+15) Сделать вывод позиций где произошло совпадение(Genom из 151001(обновить из гита))
+16)(151005) Скопировать наш MyList(от 151001), сделать вариант BoundedList(ограниченный), в конструктор передать его размер.Переделать код, чтобы выбрасывались эксепшены если пытаемся получить данные из пустого списка или если список переполняется.
+17)Оформить отдельный класс, в котором будет статический класс, в нем единственный статический метод deepCopy. В него мы передаем сериализованный объект и этот метод возвращает его копию. В случае исключения (если объект не сериализован) — вернуть null.
+18)(151008) Сделать генерацию матрицы с помощью параллельных потоков(класс HomeWork)
+-19)(151012)Проблема пяти обедающих философов. Перед каждым лежит тарелка, между тарелками по одной палочке. Написать программу, имитирующую поведение философов. (Ест 10 сек, отдыхает 20 сек, после снова хочет есть). Задача, сделать так, чтобы никто из философов не умер от голода.
+20)(151013) Сделать вариант блокирующей очереди, ограниченной по размеру(поток, который будет пытаться положить что-то в полную очередь должен wait)
+21)(151015)Сравнить по времени действия Counter и SyncStatic  от 151012(напр зап мил раз inc()).
22)(необяз) Попробовать реализовать ReadWriteLock с помощью Lock
+23)(151019) Написать программу, в которой мы реализуем ввод данных в таблицу с клавиатуры(инф о членах семьи: имя, год рождения, рост и вес)(Ввод подряд через пробел). При этом применить PrepareStatement.
+24)(151022) Написать код для сохранения объекта на сервер, аналогичный тому, что писали на лекции.
25)(151027)Написать с использованием TDD (JUnit) класс Roman, в нем метод convert, который преобразует обычное число в число в риских цифрах.(от 1 до 1000).
26)(необяз) Дописать тетрис до конца(libjdx)
27)(необяз)(151029) реализовать все наши примеры по многопот через семафоры
